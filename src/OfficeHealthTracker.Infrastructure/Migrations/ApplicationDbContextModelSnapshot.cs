// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OfficeHealthTracker.Infrastructure.Data;

namespace OfficeHealthTracker.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OfficeHealthTracker.Domain.Model.Address", b =>
                {
                    b.Property<Guid>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Building")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarPark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lobby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Pantry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Room")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("OfficeHealthTracker.Domain.Model.FieldType", b =>
                {
                    b.Property<Guid>("FieldTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FieldTypeId");

                    b.ToTable("FieldTypes");

                    b.HasData(
                        new
                        {
                            FieldTypeId = new Guid("3d986c86-321f-427c-8624-1b8f513c4203"),
                            TypeName = "DropDown"
                        },
                        new
                        {
                            FieldTypeId = new Guid("c649547c-70be-49fb-883b-9189433b7d65"),
                            TypeName = "TextBox"
                        },
                        new
                        {
                            FieldTypeId = new Guid("480874ca-c054-4d1a-9832-74ada72cd4f6"),
                            TypeName = "CheckBox"
                        },
                        new
                        {
                            FieldTypeId = new Guid("29460c45-7226-4fea-be84-28a74920ff3b"),
                            TypeName = "Radio"
                        });
                });

            modelBuilder.Entity("OfficeHealthTracker.Domain.Model.FilledForm", b =>
                {
                    b.Property<Guid>("FilledFormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FieldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("FilledFormId");

                    b.ToTable("FilledForms");
                });

            modelBuilder.Entity("OfficeHealthTracker.Domain.Model.PayloadData", b =>
                {
                    b.Property<Guid>("PayLoadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Humidity")
                        .HasColumnType("int");

                    b.Property<bool>("Occupancy")
                        .HasColumnType("bit");

                    b.Property<int>("Temperature")
                        .HasColumnType("int");

                    b.HasKey("PayLoadId");

                    b.ToTable("PayloadDatas");
                });

            modelBuilder.Entity("OfficeHealthTracker.Domain.Model.Template", b =>
                {
                    b.Property<Guid>("TemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TemplateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TemplateId");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("OfficeHealthTracker.Domain.Model.TemplateField", b =>
                {
                    b.Property<Guid>("TemplateFieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FieldOptions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FieldTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Sorting")
                        .HasColumnType("int");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TemplateFieldId");

                    b.HasIndex("FieldTypeId");

                    b.HasIndex("TemplateId");

                    b.ToTable("TemplateFields");
                });

            modelBuilder.Entity("OfficeHealthTracker.Domain.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("55402d34-0234-4fa8-b564-fc96641b23d0"),
                            Password = "STPL",
                            Username = "HTT"
                        });
                });

            modelBuilder.Entity("OfficeHealthTracker.Domain.Model.TemplateField", b =>
                {
                    b.HasOne("OfficeHealthTracker.Domain.Model.FieldType", "FieldType")
                        .WithMany()
                        .HasForeignKey("FieldTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OfficeHealthTracker.Domain.Model.Template", "Template")
                        .WithMany("TemplateFields")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
